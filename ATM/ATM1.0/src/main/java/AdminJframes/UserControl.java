/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package AdminJframes;

import AdminJframes.MainAdminLobby;
import java.awt.Font;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import whatever.proyectocajero.SQLConection;
import whatever.proyectocajero.SharedUserDATA;

/**
 *
 * @author ALEJANDRO REQUENA
 */
public class UserControl extends javax.swing.JFrame {

    /**
     * Creates new form UserControl
     */
    public UserControl() {
        initComponents();
        this.setLocationRelativeTo(null);
        DisplayPINTable();
        DisplayAverageTable();
        DisplayTotalRetirado();
        DisplayLastUser();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AverageDepositAllUsers = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        ChangePINUsers = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        TotalRetirado = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        LastUserLogged = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(51, 51, 255));
        jButton1.setText("Regresar");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Montserrat", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(6, 90, 216));
        jLabel1.setText("Control de usuarios");
        jPanel4.add(jLabel1, new java.awt.GridBagConstraints());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jPanel3.setBackground(new java.awt.Color(6, 90, 216));

        jPanel6.setBackground(new java.awt.Color(7, 117, 228));
        jPanel6.setForeground(new java.awt.Color(7, 117, 228));

        AverageDepositAllUsers.setBackground(new java.awt.Color(255, 255, 255));
        AverageDepositAllUsers.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        AverageDepositAllUsers.setForeground(new java.awt.Color(0, 0, 0));
        AverageDepositAllUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Total retirado ", "Promedio depositado", "Cambios de PIN", "Ultimo acceso"
            }
        ));
        AverageDepositAllUsers.setRowHeight(30);
        AverageDepositAllUsers.setSelectionBackground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(AverageDepositAllUsers);

        ChangePINUsers.setBackground(new java.awt.Color(255, 255, 255));
        ChangePINUsers.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        ChangePINUsers.setForeground(new java.awt.Color(0, 0, 0));
        ChangePINUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Total retirado ", "Promedio depositado", "Cambios de PIN", "Ultimo acceso"
            }
        ));
        ChangePINUsers.setSelectionBackground(new java.awt.Color(0, 0, 0));
        jScrollPane2.setViewportView(ChangePINUsers);

        TotalRetirado.setBackground(new java.awt.Color(255, 255, 255));
        TotalRetirado.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        TotalRetirado.setForeground(new java.awt.Color(0, 0, 0));
        TotalRetirado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Total retirado ", "Promedio depositado", "Cambios de PIN", "Ultimo acceso"
            }
        ));
        TotalRetirado.setRowHeight(30);
        TotalRetirado.setSelectionBackground(new java.awt.Color(0, 0, 0));
        jScrollPane3.setViewportView(TotalRetirado);

        LastUserLogged.setBackground(new java.awt.Color(255, 255, 255));
        LastUserLogged.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        LastUserLogged.setForeground(new java.awt.Color(0, 0, 0));
        LastUserLogged.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Total retirado ", "Promedio depositado", "Cambios de PIN", "Ultimo acceso"
            }
        ));
        LastUserLogged.setRowHeight(30);
        LastUserLogged.setSelectionBackground(new java.awt.Color(0, 0, 0));
        jScrollPane4.setViewportView(LastUserLogged);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(15, 15, 15))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel3, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MainAdminLobby LobbyAdmin = new MainAdminLobby();
        LobbyAdmin.setVisible(true);
        
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void DisplayPromedioRetirado(){
        SQLConection sqlConnection = new SQLConection();
        Connection conn = sqlConnection.StartSQLConnection();
        
        try{
            String sqlQuery = "SELECT AVG(monto) AS promedio_monto_depositado FROM TRANSACCIONES WHERE tipo_transaccion = 'DEPOSITO';";
            PreparedStatement pstmt = conn.prepareStatement(sqlQuery);
            ResultSet rs = pstmt.executeQuery();
            
            DefaultTableModel model = new DefaultTableModel();
        
        String[] columnNames = {"Promedio depositado por todos los usuarios"};
        model.setColumnIdentifiers(columnNames);
        
        while (rs.next()) {
            Object[] row = new Object[1];  
            BigDecimal promedio = rs.getBigDecimal("promedio_monto_depositado");
            row[0] = promedio;
            model.addRow(row);
        }
        
        AverageDepositAllUsers.setModel(model);
            
        } catch(Exception e){
            JOptionPane.showConfirmDialog(this, "LOL jajaj");
            return;
        }
        
        
    }
    
    private void DisplayTotalRetirado(){
        SQLConection sqlConnection = new SQLConection();
        Connection conn = sqlConnection.StartSQLConnection();
        
        try{
            String sqlQuery = "SELECT SUM(monto) AS total_retirado FROM TRANSACCIONES WHERE tipo_transaccion = 'retiro';";
            PreparedStatement pstmt = conn.prepareStatement(sqlQuery);
            ResultSet rs = pstmt.executeQuery();
            
            DefaultTableModel model = new DefaultTableModel();
        
        String[] columnNames = {"Total retirado por todos los usuarios"};
        model.setColumnIdentifiers(columnNames);
        
        while (rs.next()) {
            Object[] row = new Object[1];  
            BigDecimal totalRetirado = rs.getBigDecimal("total_retirado"); 
            row[0] = totalRetirado;         
            model.addRow(row);
        }
        
        TotalRetirado.setModel(model);
            
        } catch(Exception e){
            JOptionPane.showConfirmDialog(this, "LOL jajaj");
            return;
        }
    }
    
    private void DisplayAverageTable(){
        SQLConection sqlConnection = new SQLConection();
        Connection conn = sqlConnection.StartSQLConnection();
        
        try{
            String sqlQuery = "SELECT AVG(monto) AS promedio_monto_depositado FROM TRANSACCIONES WHERE tipo_transaccion = 'DEPOSITO';";
            PreparedStatement pstmt = conn.prepareStatement(sqlQuery);
            ResultSet rs = pstmt.executeQuery();
            
            DefaultTableModel model = new DefaultTableModel();
        
        String[] columnNames = {"Promedio depositado por todos los usuarios"};
        model.setColumnIdentifiers(columnNames);
        
        while (rs.next()) {
            Object[] row = new Object[1];  
            BigDecimal promedio = rs.getBigDecimal("promedio_monto_depositado");
            row[0] = promedio;
            model.addRow(row);
        }
        
        AverageDepositAllUsers.setModel(model);
            
        } catch(Exception e){
            JOptionPane.showConfirmDialog(this, "LOL jajaj");
            return;
        }
        
        
    }

    private void DisplayPINTable(){
        SQLConection sqlConnection = new SQLConection();
        Connection conn = sqlConnection.StartSQLConnection();
        
        try{
            String sqlQuery = "SELECT DISTINCT cp.id_usuario, cu.nombre FROM CAMBIOS_PIN cp JOIN CREAR_USUARIOS cu ON cp.id_usuario = cu.id_usuario;";
            PreparedStatement pstmt = conn.prepareStatement(sqlQuery);
            ResultSet rs = pstmt.executeQuery();
            
            DefaultTableModel model = new DefaultTableModel();
        
        String[] columnNames = {"Id del usuario", "Nombre del usuario que ha cambiado su PIN"};
        model.setColumnIdentifiers(columnNames);
        
        while (rs.next()) {
            Object[] row = new Object[2];  
            row[0] = rs.getInt("id_usuario");
            row[1] = rs.getString("nombre");
            model.addRow(row);
        }
        
        ChangePINUsers.setModel(model);
            
        } catch(Exception e){
            JOptionPane.showConfirmDialog(this, "LOL jajaj");
            return;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserControl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserControl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserControl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserControl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserControl().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AverageDepositAllUsers;
    private javax.swing.JTable ChangePINUsers;
    private javax.swing.JTable LastUserLogged;
    private javax.swing.JTable TotalRetirado;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables

    private void DisplayLastUser() {
        SQLConection sqlConnection = new SQLConection();
        Connection conn = sqlConnection.StartSQLConnection();
        
        try{
            String sqlQuery = "SELECT TOP 1 nombre, ultimo_acceso FROM CREAR_USUARIOS ORDER BY ultimo_acceso DESC;";
            PreparedStatement pstmt = conn.prepareStatement(sqlQuery);
            ResultSet rs = pstmt.executeQuery();
            
            DefaultTableModel model = new DefaultTableModel();
        
        String[] columnNames = {"Nombre del usuario", "Ultimo acceso"};
        model.setColumnIdentifiers(columnNames);
        
        while (rs.next()) {
            Object[] row = new Object[2];  
            Timestamp ultimoAcceso = rs.getTimestamp("ultimo_acceso");
            row[0] = rs.getString("nombre");
            row[1] = ultimoAcceso;
            model.addRow(row);
        }
        
        LastUserLogged.setModel(model);
            
        } catch(Exception e){
            JOptionPane.showConfirmDialog(this, "LOL jajaj");
            return;
        }
    }
}
