/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package AdminJframes;

import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import whatever.proyectocajero.SQLConection;
import whatever.proyectocajero.SharedAdminData;

/**
 *
 * @author ALEJANDRO REQUENA
 */
public class AddMoney extends javax.swing.JFrame {

    /**
     * Creates new form AddMoney
     */
    public AddMoney() {
        initComponents();
        this.setLocationRelativeTo(null);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        bgUpperAddMoney = new javax.swing.JPanel();
        ComebackBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        bgLowerAddMoney = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        FieldAddMoney1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        AddBtn = new javax.swing.JButton();
        FieldAddMoney5 = new javax.swing.JTextField();
        FieldAddMoney10 = new javax.swing.JTextField();
        FieldAddMoney20 = new javax.swing.JTextField();
        FieldAddMoney50 = new javax.swing.JTextField();
        FieldAddMoney100 = new javax.swing.JTextField();
        FieldAddMoney200 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(942, 549));
        jPanel1.setLayout(new java.awt.BorderLayout());

        bgUpperAddMoney.setBackground(new java.awt.Color(255, 255, 255));

        ComebackBtn.setBackground(new java.awt.Color(255, 255, 255));
        ComebackBtn.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        ComebackBtn.setForeground(new java.awt.Color(51, 51, 255));
        ComebackBtn.setText("Regresar");
        ComebackBtn.setBorder(null);
        ComebackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComebackBtnActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Montserrat", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(6, 90, 216));
        jLabel1.setText("Agregar efectivo");
        jPanel2.add(jLabel1, new java.awt.GridBagConstraints());

        javax.swing.GroupLayout bgUpperAddMoneyLayout = new javax.swing.GroupLayout(bgUpperAddMoney);
        bgUpperAddMoney.setLayout(bgUpperAddMoneyLayout);
        bgUpperAddMoneyLayout.setHorizontalGroup(
            bgUpperAddMoneyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgUpperAddMoneyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ComebackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 806, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        bgUpperAddMoneyLayout.setVerticalGroup(
            bgUpperAddMoneyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgUpperAddMoneyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bgUpperAddMoneyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComebackBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1.add(bgUpperAddMoney, java.awt.BorderLayout.PAGE_START);

        bgLowerAddMoney.setBackground(new java.awt.Color(6, 90, 216));
        bgLowerAddMoney.setForeground(new java.awt.Color(6, 90, 216));

        jPanel3.setBackground(new java.awt.Color(7, 117, 228));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("1.00Q");

        FieldAddMoney1.setBackground(new java.awt.Color(255, 255, 255));
        FieldAddMoney1.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        FieldAddMoney1.setForeground(new java.awt.Color(0, 0, 0));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("5.00Q");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("10.00Q");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("20.00Q");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("200.00Q");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("50.00Q");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("100.00Q");

        AddBtn.setBackground(new java.awt.Color(255, 11, 79));
        AddBtn.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        AddBtn.setForeground(new java.awt.Color(255, 255, 255));
        AddBtn.setText("Agregar");
        AddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBtnActionPerformed(evt);
            }
        });

        FieldAddMoney5.setBackground(new java.awt.Color(255, 255, 255));
        FieldAddMoney5.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        FieldAddMoney5.setForeground(new java.awt.Color(0, 0, 0));
        FieldAddMoney5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldAddMoney5ActionPerformed(evt);
            }
        });

        FieldAddMoney10.setBackground(new java.awt.Color(255, 255, 255));
        FieldAddMoney10.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        FieldAddMoney10.setForeground(new java.awt.Color(0, 0, 0));

        FieldAddMoney20.setBackground(new java.awt.Color(255, 255, 255));
        FieldAddMoney20.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        FieldAddMoney20.setForeground(new java.awt.Color(0, 0, 0));
        FieldAddMoney20.setName(""); // NOI18N
        FieldAddMoney20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldAddMoney20ActionPerformed(evt);
            }
        });

        FieldAddMoney50.setBackground(new java.awt.Color(255, 255, 255));
        FieldAddMoney50.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        FieldAddMoney50.setForeground(new java.awt.Color(0, 0, 0));

        FieldAddMoney100.setBackground(new java.awt.Color(255, 255, 255));
        FieldAddMoney100.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        FieldAddMoney100.setForeground(new java.awt.Color(0, 0, 0));
        FieldAddMoney100.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldAddMoney100ActionPerformed(evt);
            }
        });

        FieldAddMoney200.setBackground(new java.awt.Color(255, 255, 255));
        FieldAddMoney200.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        FieldAddMoney200.setForeground(new java.awt.Color(0, 0, 0));
        FieldAddMoney200.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldAddMoney200ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FieldAddMoney20, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                    .addComponent(FieldAddMoney1)
                    .addComponent(FieldAddMoney10)
                    .addComponent(FieldAddMoney5))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FieldAddMoney50)
                            .addComponent(FieldAddMoney100)
                            .addComponent(FieldAddMoney200))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(AddBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                        .addGap(77, 77, 77))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(FieldAddMoney1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FieldAddMoney50)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(1, 1, 1)))))
                .addGap(61, 61, 61)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FieldAddMoney5)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(FieldAddMoney100)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(FieldAddMoney10))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FieldAddMoney200)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(3, 3, 3)))))
                .addGap(45, 45, 45)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FieldAddMoney20)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(60, 60, 60)
                .addComponent(AddBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout bgLowerAddMoneyLayout = new javax.swing.GroupLayout(bgLowerAddMoney);
        bgLowerAddMoney.setLayout(bgLowerAddMoneyLayout);
        bgLowerAddMoneyLayout.setHorizontalGroup(
            bgLowerAddMoneyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLowerAddMoneyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        bgLowerAddMoneyLayout.setVerticalGroup(
            bgLowerAddMoneyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLowerAddMoneyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(bgLowerAddMoney, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 953, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FieldAddMoney5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldAddMoney5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldAddMoney5ActionPerformed

    private void FieldAddMoney20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldAddMoney20ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldAddMoney20ActionPerformed

    private void FieldAddMoney100ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldAddMoney100ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldAddMoney100ActionPerformed

    private void FieldAddMoney200ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldAddMoney200ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldAddMoney200ActionPerformed

    private void ComebackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComebackBtnActionPerformed
        MainAdminLobby LobbyAdmin = new MainAdminLobby(SharedAdminData.getLoginName(),SharedAdminData.getPassword());
        LobbyAdmin.setVisible(true);
        
        this.dispose();
    }//GEN-LAST:event_ComebackBtnActionPerformed
 
    public int GetId(){
        SQLConection sqlConnection = new SQLConection();
        Connection conn = sqlConnection.StartSQLConnection();
        int idCajero = -1;
        String sqlId = "SELECT TOP 1 id_cajero FROM CAJERO ORDER BY id_cajero DESC";
        try(PreparedStatement psmt = conn.prepareStatement(sqlId)){
            ResultSet rs = psmt.executeQuery();
            if(rs.next()){
               return idCajero = rs.getInt("id_cajero");
            }
        } catch(SQLException e){
            return -1;
        }  
        return idCajero;
    }
    
    private void AddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBtnActionPerformed
    SQLConection sqlConnection = new SQLConection();
    Connection conn = sqlConnection.StartSQLConnection();
    int idCajero = GetId();
    try {
        if(idCajero == -1) {
            JOptionPane.showMessageDialog(this, "No hay registro de ningun cajero");
            return;
        }
        else if(!isCajeroInitialized(conn, idCajero)){
            JOptionPane.showMessageDialog(this, "El cajero NO ha sido inicializado.");
            return;
        }   
        
        if (FieldAddMoney1.getText().isEmpty() || FieldAddMoney5.getText().isEmpty() || FieldAddMoney10.getText().isEmpty()
                || FieldAddMoney20.getText().isEmpty() || FieldAddMoney50.getText().isEmpty() || FieldAddMoney100.getText().isEmpty()
                || FieldAddMoney200.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tienes que rellenar todos los campos", "Campos incompletos", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        try{
        int newBilletes1 = Integer.parseInt(FieldAddMoney1.getText());
        int newBilletes5 = Integer.parseInt(FieldAddMoney5.getText());
        int newBilletes10 = Integer.parseInt(FieldAddMoney10.getText());
        int newBilletes20 = Integer.parseInt(FieldAddMoney20.getText());
        int newBilletes50 = Integer.parseInt(FieldAddMoney50.getText());
        int newBilletes100 = Integer.parseInt(FieldAddMoney100.getText());
        int newBilletes200 = Integer.parseInt(FieldAddMoney200.getText());
        } catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Solo valores numericos enteros porfavor");
        }

        
        int newBilletes1 = Integer.parseInt(FieldAddMoney1.getText());
        int newBilletes5 = Integer.parseInt(FieldAddMoney5.getText());
        int newBilletes10 = Integer.parseInt(FieldAddMoney10.getText());
        int newBilletes20 = Integer.parseInt(FieldAddMoney20.getText());
        int newBilletes50 = Integer.parseInt(FieldAddMoney50.getText());
        int newBilletes100 = Integer.parseInt(FieldAddMoney100.getText());
        int newBilletes200 = Integer.parseInt(FieldAddMoney200.getText());
        
        if(!(newBilletes1 >= 0 && newBilletes5 >= 0 && newBilletes10 >= 0 && newBilletes20 >= 0 && newBilletes50 >= 0
             && newBilletes100 >= 0 && newBilletes200 >= 0)){
            JOptionPane.showMessageDialog(this, "No creo que existan billetes negativos entonces solo podemos agregar "
                    + "valores positivos");
            return;
        }

        
        String selectSQL = "SELECT total_dinero, billetes_200, billetes_100, billetes_50, billetes_20, billetes_10, billetes_5, billetes_1 FROM CAJERO WHERE id_cajero = ?";
        try (PreparedStatement selectStmt = conn.prepareStatement(selectSQL)) {
            selectStmt.setInt(1,idCajero);
            try (ResultSet rs = selectStmt.executeQuery()) {
                if (rs.next()) {
                    // Billetes actuales en la base de datos
                    int currentBilletes1 = rs.getInt("billetes_1");
                    int currentBilletes5 = rs.getInt("billetes_5");
                    int currentBilletes10 = rs.getInt("billetes_10");
                    int currentBilletes20 = rs.getInt("billetes_20");
                    int currentBilletes50 = rs.getInt("billetes_50");
                    int currentBilletes100 = rs.getInt("billetes_100");
                    int currentBilletes200 = rs.getInt("billetes_200");
                    BigDecimal currentTotalDinero = rs.getBigDecimal("total_dinero");

                    // Sumar los nuevos billetes a los actuales
                    int updatedBilletes1 = currentBilletes1 + newBilletes1;
                    int updatedBilletes5 = currentBilletes5 + newBilletes5;
                    int updatedBilletes10 = currentBilletes10 + newBilletes10;
                    int updatedBilletes20 = currentBilletes20 + newBilletes20;
                    int updatedBilletes50 = currentBilletes50 + newBilletes50;
                    int updatedBilletes100 = currentBilletes100 + newBilletes100;
                    int updatedBilletes200 = currentBilletes200 + newBilletes200;

                    // Calcular el nuevo total de dinero
                    BigDecimal newTotalDinero = new BigDecimal(updatedBilletes1 * 1 + updatedBilletes5 * 5 + updatedBilletes10 * 10 +
                                                               updatedBilletes20 * 20 + updatedBilletes50 * 50 + updatedBilletes100 * 100 +
                                                               updatedBilletes200 * 200);

                    // Verificar si el total de dinero excede los Q30,000.00
                    if (newTotalDinero.compareTo(new BigDecimal(30000)) > 0) {
                        JOptionPane.showMessageDialog(this, "El total de dinero no puede exceder los Q30,000.00.");
                        return;
                    }

                    // Actualizar los billetes y el total en la base de datos
                    String updateSQL = "UPDATE CAJERO SET total_dinero = ?, billetes_200 = ?, billetes_100 = ?, billetes_50 = ?, billetes_20 = ?, billetes_10 = ?, billetes_5 = ?, billetes_1 = ? WHERE id_cajero = ?";
                    try (PreparedStatement updateStmt = conn.prepareStatement(updateSQL)) {
                        updateStmt.setBigDecimal(1, newTotalDinero);
                        updateStmt.setInt(2, updatedBilletes200);
                        updateStmt.setInt(3, updatedBilletes100);
                        updateStmt.setInt(4, updatedBilletes50);
                        updateStmt.setInt(5, updatedBilletes20);
                        updateStmt.setInt(6, updatedBilletes10);
                        updateStmt.setInt(7, updatedBilletes5);
                        updateStmt.setInt(8, updatedBilletes1);
                        updateStmt.setInt(9, idCajero);

                        int rowsAffected = updateStmt.executeUpdate();
                        if (rowsAffected > 0) {
                            JOptionPane.showMessageDialog(this, "Efectivo agregado correctamente al cajero.");
                        } else {
                            JOptionPane.showMessageDialog(this, "Error al agregar efectivo al cajero.");
                        }
                    }
                }
            }
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error al conectar con la base de datos: " + e.getMessage(), "Error de SQL", JOptionPane.WARNING_MESSAGE);
     }
    }//GEN-LAST:event_AddBtnActionPerformed
    
    //chekaer si ya lo inicializamos !!!!!!!!!!! sexo
    private boolean isCajeroInitialized(Connection conn, int idCajero) throws SQLException {
        String query = "SELECT estado_inicializado FROM CAJERO WHERE id_cajero = ?";  // Consulta SQL
        try (PreparedStatement psmt = conn.prepareStatement(query)) {
            psmt.setInt(1, idCajero);  // Establece el ID del cajero

            try (ResultSet rs = psmt.executeQuery()) {
                if (rs.next()) {
                    // Obtener el valor del campo estado_inicializado
                    boolean estadoInicializado = rs.getBoolean("estado_inicializado");
                    return estadoInicializado;  // Devuelve true si está inicializado (1), false si no (0)
                }
            }
        }
        return false;  // Si no se encuentra el cajero o no hay resultados
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddMoney.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddMoney.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddMoney.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddMoney.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddMoney().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBtn;
    private javax.swing.JButton ComebackBtn;
    private javax.swing.JTextField FieldAddMoney1;
    private javax.swing.JTextField FieldAddMoney10;
    private javax.swing.JTextField FieldAddMoney100;
    private javax.swing.JTextField FieldAddMoney20;
    private javax.swing.JTextField FieldAddMoney200;
    private javax.swing.JTextField FieldAddMoney5;
    private javax.swing.JTextField FieldAddMoney50;
    private javax.swing.JPanel bgLowerAddMoney;
    private javax.swing.JPanel bgUpperAddMoney;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables


}
